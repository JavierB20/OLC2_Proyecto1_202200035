//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from AnalizadorLexico.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace analyzer {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class AnalizadorLexicoLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, NEWLINE=15, INT=16, DECIMAL=17, 
		CARACTER=18, CADENA=19, BOOL=20, ID=21, COMENTARIO_LINEA=22, COMENTARIO_BLOQUE=23, 
		IGUAL=24, DOSPUNTOS_IGUAL=25, PARENTESIS_ABRE=26, PARENTESIS_CIERRA=27, 
		CORCHETE_ABRE=28, CORCHETE_CIERRA=29, LLAVE_ABRE=30, LLAVE_CIERRA=31, 
		ASIGNACION_SUMA=32, ASIGNACION_RESTA=33, MAS=34, MENOS=35, MULT=36, DIV=37, 
		MODULO=38, Y_LOGICO=39, O_LOGICO=40, NEGACION=41, IGUAL_IGUAL=42, DIFERENTE=43, 
		MAYOR_IGUAL=44, MAYOR=45, MENOR_IGUAL=46, MENOR=47, INCREMENTO=48, DECREMENTO=49;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "NEWLINE", "INT", "DECIMAL", 
		"ESC_SEQ", "CARACTER", "CADENA", "BOOL", "ID", "COMENTARIO_LINEA", "COMENTARIO_BLOQUE", 
		"IGUAL", "DOSPUNTOS_IGUAL", "PARENTESIS_ABRE", "PARENTESIS_CIERRA", "CORCHETE_ABRE", 
		"CORCHETE_CIERRA", "LLAVE_ABRE", "LLAVE_CIERRA", "ASIGNACION_SUMA", "ASIGNACION_RESTA", 
		"MAS", "MENOS", "MULT", "DIV", "MODULO", "Y_LOGICO", "O_LOGICO", "NEGACION", 
		"IGUAL_IGUAL", "DIFERENTE", "MAYOR_IGUAL", "MAYOR", "MENOR_IGUAL", "MENOR", 
		"INCREMENTO", "DECREMENTO"
	};


	public AnalizadorLexicoLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public AnalizadorLexicoLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'fmt.Println'", "'var'", "'for'", "'int'", "'float64'", "'string'", 
		"'bool'", "'rune'", "'if'", "'else'", "'switch'", "'case'", "':'", "'default'", 
		null, null, null, null, null, null, null, null, null, "'='", "':='", "'('", 
		"')'", "'['", "']'", "'{'", "'}'", "'+='", "'-='", "'+'", "'-'", "'*'", 
		"'/'", "'%'", "'&&'", "'||'", "'!'", "'=='", "'!='", "'>='", "'>'", "'<='", 
		"'<'", "'++'", "'--'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, "NEWLINE", "INT", "DECIMAL", "CARACTER", "CADENA", "BOOL", 
		"ID", "COMENTARIO_LINEA", "COMENTARIO_BLOQUE", "IGUAL", "DOSPUNTOS_IGUAL", 
		"PARENTESIS_ABRE", "PARENTESIS_CIERRA", "CORCHETE_ABRE", "CORCHETE_CIERRA", 
		"LLAVE_ABRE", "LLAVE_CIERRA", "ASIGNACION_SUMA", "ASIGNACION_RESTA", "MAS", 
		"MENOS", "MULT", "DIV", "MODULO", "Y_LOGICO", "O_LOGICO", "NEGACION", 
		"IGUAL_IGUAL", "DIFERENTE", "MAYOR_IGUAL", "MAYOR", "MENOR_IGUAL", "MENOR", 
		"INCREMENTO", "DECREMENTO"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "AnalizadorLexico.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static AnalizadorLexicoLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,49,329,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,
		2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,
		1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,
		8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,
		1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,4,14,
		182,8,14,11,14,12,14,183,1,14,1,14,1,15,4,15,189,8,15,11,15,12,15,190,
		1,16,4,16,194,8,16,11,16,12,16,195,1,16,1,16,4,16,200,8,16,11,16,12,16,
		201,1,17,1,17,1,17,1,18,1,18,1,18,3,18,210,8,18,1,18,1,18,1,19,1,19,1,
		19,5,19,217,8,19,10,19,12,19,220,9,19,1,19,1,19,1,20,1,20,1,20,1,20,1,
		20,1,20,1,20,1,20,1,20,3,20,233,8,20,1,21,1,21,5,21,237,8,21,10,21,12,
		21,240,9,21,1,22,1,22,1,22,1,22,5,22,246,8,22,10,22,12,22,249,9,22,1,22,
		1,22,1,23,1,23,1,23,1,23,5,23,257,8,23,10,23,12,23,260,9,23,1,23,1,23,
		1,23,1,23,1,23,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,
		1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,
		1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,
		1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,46,
		1,46,1,46,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,49,1,258,0,50,1,1,3,2,5,
		3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
		33,17,35,0,37,18,39,19,41,20,43,21,45,22,47,23,49,24,51,25,53,26,55,27,
		57,28,59,29,61,30,63,31,65,32,67,33,69,34,71,35,73,36,75,37,77,38,79,39,
		81,40,83,41,85,42,87,43,89,44,91,45,93,46,95,47,97,48,99,49,1,0,8,3,0,
		9,10,13,13,32,32,1,0,48,57,6,0,34,34,39,39,92,92,110,110,114,114,116,116,
		4,0,10,10,13,13,39,39,92,92,4,0,10,10,13,13,34,34,92,92,3,0,65,90,95,95,
		97,122,4,0,48,57,65,90,95,95,97,122,2,0,10,10,13,13,338,0,1,1,0,0,0,0,
		3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
		0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
		1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,37,1,0,0,
		0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
		1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
		0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
		1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,
		0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,
		1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,1,101,1,0,0,0,3,113,1,0,
		0,0,5,117,1,0,0,0,7,121,1,0,0,0,9,125,1,0,0,0,11,133,1,0,0,0,13,140,1,
		0,0,0,15,145,1,0,0,0,17,150,1,0,0,0,19,153,1,0,0,0,21,158,1,0,0,0,23,165,
		1,0,0,0,25,170,1,0,0,0,27,172,1,0,0,0,29,181,1,0,0,0,31,188,1,0,0,0,33,
		193,1,0,0,0,35,203,1,0,0,0,37,206,1,0,0,0,39,213,1,0,0,0,41,232,1,0,0,
		0,43,234,1,0,0,0,45,241,1,0,0,0,47,252,1,0,0,0,49,266,1,0,0,0,51,268,1,
		0,0,0,53,271,1,0,0,0,55,273,1,0,0,0,57,275,1,0,0,0,59,277,1,0,0,0,61,279,
		1,0,0,0,63,281,1,0,0,0,65,283,1,0,0,0,67,286,1,0,0,0,69,289,1,0,0,0,71,
		291,1,0,0,0,73,293,1,0,0,0,75,295,1,0,0,0,77,297,1,0,0,0,79,299,1,0,0,
		0,81,302,1,0,0,0,83,305,1,0,0,0,85,307,1,0,0,0,87,310,1,0,0,0,89,313,1,
		0,0,0,91,316,1,0,0,0,93,318,1,0,0,0,95,321,1,0,0,0,97,323,1,0,0,0,99,326,
		1,0,0,0,101,102,5,102,0,0,102,103,5,109,0,0,103,104,5,116,0,0,104,105,
		5,46,0,0,105,106,5,80,0,0,106,107,5,114,0,0,107,108,5,105,0,0,108,109,
		5,110,0,0,109,110,5,116,0,0,110,111,5,108,0,0,111,112,5,110,0,0,112,2,
		1,0,0,0,113,114,5,118,0,0,114,115,5,97,0,0,115,116,5,114,0,0,116,4,1,0,
		0,0,117,118,5,102,0,0,118,119,5,111,0,0,119,120,5,114,0,0,120,6,1,0,0,
		0,121,122,5,105,0,0,122,123,5,110,0,0,123,124,5,116,0,0,124,8,1,0,0,0,
		125,126,5,102,0,0,126,127,5,108,0,0,127,128,5,111,0,0,128,129,5,97,0,0,
		129,130,5,116,0,0,130,131,5,54,0,0,131,132,5,52,0,0,132,10,1,0,0,0,133,
		134,5,115,0,0,134,135,5,116,0,0,135,136,5,114,0,0,136,137,5,105,0,0,137,
		138,5,110,0,0,138,139,5,103,0,0,139,12,1,0,0,0,140,141,5,98,0,0,141,142,
		5,111,0,0,142,143,5,111,0,0,143,144,5,108,0,0,144,14,1,0,0,0,145,146,5,
		114,0,0,146,147,5,117,0,0,147,148,5,110,0,0,148,149,5,101,0,0,149,16,1,
		0,0,0,150,151,5,105,0,0,151,152,5,102,0,0,152,18,1,0,0,0,153,154,5,101,
		0,0,154,155,5,108,0,0,155,156,5,115,0,0,156,157,5,101,0,0,157,20,1,0,0,
		0,158,159,5,115,0,0,159,160,5,119,0,0,160,161,5,105,0,0,161,162,5,116,
		0,0,162,163,5,99,0,0,163,164,5,104,0,0,164,22,1,0,0,0,165,166,5,99,0,0,
		166,167,5,97,0,0,167,168,5,115,0,0,168,169,5,101,0,0,169,24,1,0,0,0,170,
		171,5,58,0,0,171,26,1,0,0,0,172,173,5,100,0,0,173,174,5,101,0,0,174,175,
		5,102,0,0,175,176,5,97,0,0,176,177,5,117,0,0,177,178,5,108,0,0,178,179,
		5,116,0,0,179,28,1,0,0,0,180,182,7,0,0,0,181,180,1,0,0,0,182,183,1,0,0,
		0,183,181,1,0,0,0,183,184,1,0,0,0,184,185,1,0,0,0,185,186,6,14,0,0,186,
		30,1,0,0,0,187,189,7,1,0,0,188,187,1,0,0,0,189,190,1,0,0,0,190,188,1,0,
		0,0,190,191,1,0,0,0,191,32,1,0,0,0,192,194,7,1,0,0,193,192,1,0,0,0,194,
		195,1,0,0,0,195,193,1,0,0,0,195,196,1,0,0,0,196,197,1,0,0,0,197,199,5,
		46,0,0,198,200,7,1,0,0,199,198,1,0,0,0,200,201,1,0,0,0,201,199,1,0,0,0,
		201,202,1,0,0,0,202,34,1,0,0,0,203,204,5,92,0,0,204,205,7,2,0,0,205,36,
		1,0,0,0,206,209,5,39,0,0,207,210,3,35,17,0,208,210,8,3,0,0,209,207,1,0,
		0,0,209,208,1,0,0,0,210,211,1,0,0,0,211,212,5,39,0,0,212,38,1,0,0,0,213,
		218,5,34,0,0,214,217,3,35,17,0,215,217,8,4,0,0,216,214,1,0,0,0,216,215,
		1,0,0,0,217,220,1,0,0,0,218,216,1,0,0,0,218,219,1,0,0,0,219,221,1,0,0,
		0,220,218,1,0,0,0,221,222,5,34,0,0,222,40,1,0,0,0,223,224,5,116,0,0,224,
		225,5,114,0,0,225,226,5,117,0,0,226,233,5,101,0,0,227,228,5,102,0,0,228,
		229,5,97,0,0,229,230,5,108,0,0,230,231,5,115,0,0,231,233,5,101,0,0,232,
		223,1,0,0,0,232,227,1,0,0,0,233,42,1,0,0,0,234,238,7,5,0,0,235,237,7,6,
		0,0,236,235,1,0,0,0,237,240,1,0,0,0,238,236,1,0,0,0,238,239,1,0,0,0,239,
		44,1,0,0,0,240,238,1,0,0,0,241,242,5,47,0,0,242,243,5,47,0,0,243,247,1,
		0,0,0,244,246,8,7,0,0,245,244,1,0,0,0,246,249,1,0,0,0,247,245,1,0,0,0,
		247,248,1,0,0,0,248,250,1,0,0,0,249,247,1,0,0,0,250,251,6,22,1,0,251,46,
		1,0,0,0,252,253,5,47,0,0,253,254,5,42,0,0,254,258,1,0,0,0,255,257,9,0,
		0,0,256,255,1,0,0,0,257,260,1,0,0,0,258,259,1,0,0,0,258,256,1,0,0,0,259,
		261,1,0,0,0,260,258,1,0,0,0,261,262,5,42,0,0,262,263,5,47,0,0,263,264,
		1,0,0,0,264,265,6,23,1,0,265,48,1,0,0,0,266,267,5,61,0,0,267,50,1,0,0,
		0,268,269,5,58,0,0,269,270,5,61,0,0,270,52,1,0,0,0,271,272,5,40,0,0,272,
		54,1,0,0,0,273,274,5,41,0,0,274,56,1,0,0,0,275,276,5,91,0,0,276,58,1,0,
		0,0,277,278,5,93,0,0,278,60,1,0,0,0,279,280,5,123,0,0,280,62,1,0,0,0,281,
		282,5,125,0,0,282,64,1,0,0,0,283,284,5,43,0,0,284,285,5,61,0,0,285,66,
		1,0,0,0,286,287,5,45,0,0,287,288,5,61,0,0,288,68,1,0,0,0,289,290,5,43,
		0,0,290,70,1,0,0,0,291,292,5,45,0,0,292,72,1,0,0,0,293,294,5,42,0,0,294,
		74,1,0,0,0,295,296,5,47,0,0,296,76,1,0,0,0,297,298,5,37,0,0,298,78,1,0,
		0,0,299,300,5,38,0,0,300,301,5,38,0,0,301,80,1,0,0,0,302,303,5,124,0,0,
		303,304,5,124,0,0,304,82,1,0,0,0,305,306,5,33,0,0,306,84,1,0,0,0,307,308,
		5,61,0,0,308,309,5,61,0,0,309,86,1,0,0,0,310,311,5,33,0,0,311,312,5,61,
		0,0,312,88,1,0,0,0,313,314,5,62,0,0,314,315,5,61,0,0,315,90,1,0,0,0,316,
		317,5,62,0,0,317,92,1,0,0,0,318,319,5,60,0,0,319,320,5,61,0,0,320,94,1,
		0,0,0,321,322,5,60,0,0,322,96,1,0,0,0,323,324,5,43,0,0,324,325,5,43,0,
		0,325,98,1,0,0,0,326,327,5,45,0,0,327,328,5,45,0,0,328,100,1,0,0,0,12,
		0,183,190,195,201,209,216,218,232,238,247,258,2,0,1,0,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace analyzer
