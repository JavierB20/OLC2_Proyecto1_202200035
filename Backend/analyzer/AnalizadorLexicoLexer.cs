//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from AnalizadorLexico.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace analyzer {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class AnalizadorLexicoLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		NEWLINE=18, INT=19, DECIMAL=20, CARACTER=21, CADENA=22, BOOL=23, ID=24, 
		COMENTARIO_LINEA=25, COMENTARIO_BLOQUE=26, IGUAL=27, DOSPUNTOS_IGUAL=28, 
		PARENTESIS_ABRE=29, PARENTESIS_CIERRA=30, CORCHETE_ABRE=31, CORCHETE_CIERRA=32, 
		LLAVE_ABRE=33, LLAVE_CIERRA=34, ASIGNACION_SUMA=35, ASIGNACION_RESTA=36, 
		MAS=37, MENOS=38, MULT=39, DIV=40, MODULO=41, Y_LOGICO=42, O_LOGICO=43, 
		NEGACION=44, IGUAL_IGUAL=45, DIFERENTE=46, MAYOR_IGUAL=47, MAYOR=48, MENOR_IGUAL=49, 
		MENOR=50, INCREMENTO=51, DECREMENTO=52;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"NEWLINE", "INT", "DECIMAL", "ESC_SEQ", "CARACTER", "CADENA", "BOOL", 
		"ID", "COMENTARIO_LINEA", "COMENTARIO_BLOQUE", "IGUAL", "DOSPUNTOS_IGUAL", 
		"PARENTESIS_ABRE", "PARENTESIS_CIERRA", "CORCHETE_ABRE", "CORCHETE_CIERRA", 
		"LLAVE_ABRE", "LLAVE_CIERRA", "ASIGNACION_SUMA", "ASIGNACION_RESTA", "MAS", 
		"MENOS", "MULT", "DIV", "MODULO", "Y_LOGICO", "O_LOGICO", "NEGACION", 
		"IGUAL_IGUAL", "DIFERENTE", "MAYOR_IGUAL", "MAYOR", "MENOR_IGUAL", "MENOR", 
		"INCREMENTO", "DECREMENTO"
	};


	public AnalizadorLexicoLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public AnalizadorLexicoLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'fmt.Println'", "'var'", "'for'", "';'", "'break'", "'continue'", 
		"'int'", "'float64'", "'string'", "'bool'", "'rune'", "'if'", "'else'", 
		"'switch'", "'case'", "':'", "'default'", null, null, null, null, null, 
		null, null, null, null, "'='", "':='", "'('", "')'", "'['", "']'", "'{'", 
		"'}'", "'+='", "'-='", "'+'", "'-'", "'*'", "'/'", "'%'", "'&&'", "'||'", 
		"'!'", "'=='", "'!='", "'>='", "'>'", "'<='", "'<'", "'++'", "'--'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "NEWLINE", "INT", "DECIMAL", "CARACTER", 
		"CADENA", "BOOL", "ID", "COMENTARIO_LINEA", "COMENTARIO_BLOQUE", "IGUAL", 
		"DOSPUNTOS_IGUAL", "PARENTESIS_ABRE", "PARENTESIS_CIERRA", "CORCHETE_ABRE", 
		"CORCHETE_CIERRA", "LLAVE_ABRE", "LLAVE_CIERRA", "ASIGNACION_SUMA", "ASIGNACION_RESTA", 
		"MAS", "MENOS", "MULT", "DIV", "MODULO", "Y_LOGICO", "O_LOGICO", "NEGACION", 
		"IGUAL_IGUAL", "DIFERENTE", "MAYOR_IGUAL", "MAYOR", "MENOR_IGUAL", "MENOR", 
		"INCREMENTO", "DECREMENTO"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "AnalizadorLexico.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static AnalizadorLexicoLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,52,352,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
		1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,
		4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,
		1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,
		10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,
		13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,16,1,
		16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,4,17,205,8,17,11,17,12,17,206,1,
		17,1,17,1,18,4,18,212,8,18,11,18,12,18,213,1,19,4,19,217,8,19,11,19,12,
		19,218,1,19,1,19,4,19,223,8,19,11,19,12,19,224,1,20,1,20,1,20,1,21,1,21,
		1,21,3,21,233,8,21,1,21,1,21,1,22,1,22,1,22,5,22,240,8,22,10,22,12,22,
		243,9,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,3,23,256,
		8,23,1,24,1,24,5,24,260,8,24,10,24,12,24,263,9,24,1,25,1,25,1,25,1,25,
		5,25,269,8,25,10,25,12,25,272,9,25,1,25,1,25,1,26,1,26,1,26,1,26,5,26,
		280,8,26,10,26,12,26,283,9,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,28,
		1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,
		1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,
		1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,45,1,45,1,45,1,46,
		1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,49,1,49,1,49,1,50,1,50,1,51,1,51,
		1,51,1,52,1,52,1,52,1,281,0,53,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
		19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,0,
		43,21,45,22,47,23,49,24,51,25,53,26,55,27,57,28,59,29,61,30,63,31,65,32,
		67,33,69,34,71,35,73,36,75,37,77,38,79,39,81,40,83,41,85,42,87,43,89,44,
		91,45,93,46,95,47,97,48,99,49,101,50,103,51,105,52,1,0,8,3,0,9,10,13,13,
		32,32,1,0,48,57,6,0,34,34,39,39,92,92,110,110,114,114,116,116,4,0,10,10,
		13,13,39,39,92,92,4,0,10,10,13,13,34,34,92,92,3,0,65,90,95,95,97,122,4,
		0,48,57,65,90,95,95,97,122,2,0,10,10,13,13,361,0,1,1,0,0,0,0,3,1,0,0,0,
		0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
		0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
		27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
		0,0,0,0,39,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,
		0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
		1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,
		0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
		1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,
		0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,
		105,1,0,0,0,1,107,1,0,0,0,3,119,1,0,0,0,5,123,1,0,0,0,7,127,1,0,0,0,9,
		129,1,0,0,0,11,135,1,0,0,0,13,144,1,0,0,0,15,148,1,0,0,0,17,156,1,0,0,
		0,19,163,1,0,0,0,21,168,1,0,0,0,23,173,1,0,0,0,25,176,1,0,0,0,27,181,1,
		0,0,0,29,188,1,0,0,0,31,193,1,0,0,0,33,195,1,0,0,0,35,204,1,0,0,0,37,211,
		1,0,0,0,39,216,1,0,0,0,41,226,1,0,0,0,43,229,1,0,0,0,45,236,1,0,0,0,47,
		255,1,0,0,0,49,257,1,0,0,0,51,264,1,0,0,0,53,275,1,0,0,0,55,289,1,0,0,
		0,57,291,1,0,0,0,59,294,1,0,0,0,61,296,1,0,0,0,63,298,1,0,0,0,65,300,1,
		0,0,0,67,302,1,0,0,0,69,304,1,0,0,0,71,306,1,0,0,0,73,309,1,0,0,0,75,312,
		1,0,0,0,77,314,1,0,0,0,79,316,1,0,0,0,81,318,1,0,0,0,83,320,1,0,0,0,85,
		322,1,0,0,0,87,325,1,0,0,0,89,328,1,0,0,0,91,330,1,0,0,0,93,333,1,0,0,
		0,95,336,1,0,0,0,97,339,1,0,0,0,99,341,1,0,0,0,101,344,1,0,0,0,103,346,
		1,0,0,0,105,349,1,0,0,0,107,108,5,102,0,0,108,109,5,109,0,0,109,110,5,
		116,0,0,110,111,5,46,0,0,111,112,5,80,0,0,112,113,5,114,0,0,113,114,5,
		105,0,0,114,115,5,110,0,0,115,116,5,116,0,0,116,117,5,108,0,0,117,118,
		5,110,0,0,118,2,1,0,0,0,119,120,5,118,0,0,120,121,5,97,0,0,121,122,5,114,
		0,0,122,4,1,0,0,0,123,124,5,102,0,0,124,125,5,111,0,0,125,126,5,114,0,
		0,126,6,1,0,0,0,127,128,5,59,0,0,128,8,1,0,0,0,129,130,5,98,0,0,130,131,
		5,114,0,0,131,132,5,101,0,0,132,133,5,97,0,0,133,134,5,107,0,0,134,10,
		1,0,0,0,135,136,5,99,0,0,136,137,5,111,0,0,137,138,5,110,0,0,138,139,5,
		116,0,0,139,140,5,105,0,0,140,141,5,110,0,0,141,142,5,117,0,0,142,143,
		5,101,0,0,143,12,1,0,0,0,144,145,5,105,0,0,145,146,5,110,0,0,146,147,5,
		116,0,0,147,14,1,0,0,0,148,149,5,102,0,0,149,150,5,108,0,0,150,151,5,111,
		0,0,151,152,5,97,0,0,152,153,5,116,0,0,153,154,5,54,0,0,154,155,5,52,0,
		0,155,16,1,0,0,0,156,157,5,115,0,0,157,158,5,116,0,0,158,159,5,114,0,0,
		159,160,5,105,0,0,160,161,5,110,0,0,161,162,5,103,0,0,162,18,1,0,0,0,163,
		164,5,98,0,0,164,165,5,111,0,0,165,166,5,111,0,0,166,167,5,108,0,0,167,
		20,1,0,0,0,168,169,5,114,0,0,169,170,5,117,0,0,170,171,5,110,0,0,171,172,
		5,101,0,0,172,22,1,0,0,0,173,174,5,105,0,0,174,175,5,102,0,0,175,24,1,
		0,0,0,176,177,5,101,0,0,177,178,5,108,0,0,178,179,5,115,0,0,179,180,5,
		101,0,0,180,26,1,0,0,0,181,182,5,115,0,0,182,183,5,119,0,0,183,184,5,105,
		0,0,184,185,5,116,0,0,185,186,5,99,0,0,186,187,5,104,0,0,187,28,1,0,0,
		0,188,189,5,99,0,0,189,190,5,97,0,0,190,191,5,115,0,0,191,192,5,101,0,
		0,192,30,1,0,0,0,193,194,5,58,0,0,194,32,1,0,0,0,195,196,5,100,0,0,196,
		197,5,101,0,0,197,198,5,102,0,0,198,199,5,97,0,0,199,200,5,117,0,0,200,
		201,5,108,0,0,201,202,5,116,0,0,202,34,1,0,0,0,203,205,7,0,0,0,204,203,
		1,0,0,0,205,206,1,0,0,0,206,204,1,0,0,0,206,207,1,0,0,0,207,208,1,0,0,
		0,208,209,6,17,0,0,209,36,1,0,0,0,210,212,7,1,0,0,211,210,1,0,0,0,212,
		213,1,0,0,0,213,211,1,0,0,0,213,214,1,0,0,0,214,38,1,0,0,0,215,217,7,1,
		0,0,216,215,1,0,0,0,217,218,1,0,0,0,218,216,1,0,0,0,218,219,1,0,0,0,219,
		220,1,0,0,0,220,222,5,46,0,0,221,223,7,1,0,0,222,221,1,0,0,0,223,224,1,
		0,0,0,224,222,1,0,0,0,224,225,1,0,0,0,225,40,1,0,0,0,226,227,5,92,0,0,
		227,228,7,2,0,0,228,42,1,0,0,0,229,232,5,39,0,0,230,233,3,41,20,0,231,
		233,8,3,0,0,232,230,1,0,0,0,232,231,1,0,0,0,233,234,1,0,0,0,234,235,5,
		39,0,0,235,44,1,0,0,0,236,241,5,34,0,0,237,240,3,41,20,0,238,240,8,4,0,
		0,239,237,1,0,0,0,239,238,1,0,0,0,240,243,1,0,0,0,241,239,1,0,0,0,241,
		242,1,0,0,0,242,244,1,0,0,0,243,241,1,0,0,0,244,245,5,34,0,0,245,46,1,
		0,0,0,246,247,5,116,0,0,247,248,5,114,0,0,248,249,5,117,0,0,249,256,5,
		101,0,0,250,251,5,102,0,0,251,252,5,97,0,0,252,253,5,108,0,0,253,254,5,
		115,0,0,254,256,5,101,0,0,255,246,1,0,0,0,255,250,1,0,0,0,256,48,1,0,0,
		0,257,261,7,5,0,0,258,260,7,6,0,0,259,258,1,0,0,0,260,263,1,0,0,0,261,
		259,1,0,0,0,261,262,1,0,0,0,262,50,1,0,0,0,263,261,1,0,0,0,264,265,5,47,
		0,0,265,266,5,47,0,0,266,270,1,0,0,0,267,269,8,7,0,0,268,267,1,0,0,0,269,
		272,1,0,0,0,270,268,1,0,0,0,270,271,1,0,0,0,271,273,1,0,0,0,272,270,1,
		0,0,0,273,274,6,25,1,0,274,52,1,0,0,0,275,276,5,47,0,0,276,277,5,42,0,
		0,277,281,1,0,0,0,278,280,9,0,0,0,279,278,1,0,0,0,280,283,1,0,0,0,281,
		282,1,0,0,0,281,279,1,0,0,0,282,284,1,0,0,0,283,281,1,0,0,0,284,285,5,
		42,0,0,285,286,5,47,0,0,286,287,1,0,0,0,287,288,6,26,1,0,288,54,1,0,0,
		0,289,290,5,61,0,0,290,56,1,0,0,0,291,292,5,58,0,0,292,293,5,61,0,0,293,
		58,1,0,0,0,294,295,5,40,0,0,295,60,1,0,0,0,296,297,5,41,0,0,297,62,1,0,
		0,0,298,299,5,91,0,0,299,64,1,0,0,0,300,301,5,93,0,0,301,66,1,0,0,0,302,
		303,5,123,0,0,303,68,1,0,0,0,304,305,5,125,0,0,305,70,1,0,0,0,306,307,
		5,43,0,0,307,308,5,61,0,0,308,72,1,0,0,0,309,310,5,45,0,0,310,311,5,61,
		0,0,311,74,1,0,0,0,312,313,5,43,0,0,313,76,1,0,0,0,314,315,5,45,0,0,315,
		78,1,0,0,0,316,317,5,42,0,0,317,80,1,0,0,0,318,319,5,47,0,0,319,82,1,0,
		0,0,320,321,5,37,0,0,321,84,1,0,0,0,322,323,5,38,0,0,323,324,5,38,0,0,
		324,86,1,0,0,0,325,326,5,124,0,0,326,327,5,124,0,0,327,88,1,0,0,0,328,
		329,5,33,0,0,329,90,1,0,0,0,330,331,5,61,0,0,331,332,5,61,0,0,332,92,1,
		0,0,0,333,334,5,33,0,0,334,335,5,61,0,0,335,94,1,0,0,0,336,337,5,62,0,
		0,337,338,5,61,0,0,338,96,1,0,0,0,339,340,5,62,0,0,340,98,1,0,0,0,341,
		342,5,60,0,0,342,343,5,61,0,0,343,100,1,0,0,0,344,345,5,60,0,0,345,102,
		1,0,0,0,346,347,5,43,0,0,347,348,5,43,0,0,348,104,1,0,0,0,349,350,5,45,
		0,0,350,351,5,45,0,0,351,106,1,0,0,0,12,0,206,213,218,224,232,239,241,
		255,261,270,281,2,0,1,0,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace analyzer
